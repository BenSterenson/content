id: Pcap Miner (Large Files)
version: -1
name: Pcap Miner (Large Files)
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 93f3e754-9148-4ea0-85d8-f2a6c50070ac
    type: start
    task:
      id: 93f3e754-9148-4ea0-85d8-f2a6c50070ac
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: f7c71b72-c734-4c7d-852c-d6cafefa586a
    type: playbook
    task:
      id: f7c71b72-c734-4c7d-852c-d6cafefa586a
      version: -1
      name: PcapMiner Playbook
      description: This playbook only launches the PCAP Miner script. It is used in
        the `Pcap Miner (Large Files)` playbook and is equivalent to running the `PcapMinerV2`
        script.
      playbookName: PcapMiner Playbook
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      convs_to_display:
        simple: ${inputs.convs_to_display}
      custom_regex:
        simple: ${inputs.custom_regex}
      entry_id:
        simple: ${inputs.entry_id}
      extract_ips:
        simple: ${inputs.extract_ips}
      extract_strings:
        simple: ${inputs.protocol_output}
      filtered_file_name:
        simple: ${inputs.filtered_file_name}
      iterate:
        simple: "True"
      packets_to_analyze:
        simple: ${inputs.packets_to_analyze}
      pcap_filter:
        simple: ${inputs.pcap_filter}
      protocol_output:
        simple: ${inputs.protocol_output}
      rsa_decrypt_key_entry_id:
        simple: ${inputs.rsa_decrypt_key_entry_id}
      wpa_password:
        simple: ${inputs.wpa_password}
    separatecontext: true
    loop:
      iscommand: false
      builtincondition:
      - - operator: isNotEmpty
          left:
            value:
              simple: PcapResults.Packets
            iscontext: true
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 450,
          "y": 170
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: e5e313ae-7880-44fa-81e5-bfb2e43351b9
    type: title
    task:
      id: e5e313ae-7880-44fa-81e5-bfb2e43351b9
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 340
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 355,
        "width": 380,
        "x": 450,
        "y": 50
      }
    }
  }
inputs:
- key: entry_id
  value: {}
  required: true
  description: The entry_id of the PCAP file to mine.
  playbookInputQuery:
- key: protocol_output
  value: {}
  required: false
  description: What protocols to ouput as context. Could be multiple protocols seperated
    by commas. If left empy will not output any protocols to context.
  playbookInputQuery:
- key: extract_strings
  value: {}
  required: false
  description: Whether to  extract IP, URL and Email from PCAP file.
  playbookInputQuery:
- key: pcap_filter
  value: {}
  required: false
  description: 'Filter to apply on PCAP. Wireshark syntax as can be found here: https://www.wireshark.org/docs/man-pages/wireshark-filter.html'
  playbookInputQuery:
- key: custom_regex
  value: {}
  required: false
  description: Your own regular expression to extract from the PCAP.
  playbookInputQuery:
- key: filtered_file_name
  value: {}
  required: false
  description: The name of the PCAP file to save to the war room after applying the
    `pcap_filter` (i.e. `filtered_file.pcap`).
  playbookInputQuery:
- key: rsa_decrypt_key_entry_id
  value: {}
  required: false
  description: The entry ID for the RSA decryption key.
  playbookInputQuery:
- key: convs_to_display
  value:
    simple: "15"
  required: false
  description: Number of conversatinos to display.
  playbookInputQuery:
- key: wpa_password
  value: {}
  required: false
  description: The WPA password. By providing the password you will be able to decrypt
    encrypted traffic data.
  playbookInputQuery:
- key: extract_ips
  value: {}
  required: false
  description: Output to context the source and destination IPs in the PCAP file.
  playbookInputQuery:
- key: packets_to_analyze
  value:
    simple: 40,000
  required: true
  description: The number of packets to analyze. Recommended not over 50,000 for default
    XSOAR settings.
  playbookInputQuery:
outputs: []
fromversion: 5.0.0
tests:
- No tests (auto formatted)
description: ''
